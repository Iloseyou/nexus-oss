<?xml version="1.0" encoding="UTF-8"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2007-2014 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.nexus.plugins</groupId>
    <artifactId>nexus-plugins-rapture</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>nexus-rapture-baseapp</artifactId>
  <name>${project.groupId}:${project.artifactId}</name>
  <packaging>bundle</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Fragment-Host>org.sonatype.nexus.plugins.nexus-rapture-plugin</Fragment-Host>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>regenerate</id>

      <dependencies>
        <dependency>
          <groupId>com.sencha</groupId>
          <artifactId>ext</artifactId>
          <classifier>commercial</classifier>
          <type>zip</type>
          <version>5.0.1</version>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}/ext"/>

                    <unzip src="${com.sencha:ext:zip:commercial}" dest="${project.build.directory}/ext">
                      <cutdirsmapper dirs="1"/>
                      <patternset>
                        <include name="ext-*/*.js"/>
                        <include name="ext-*/*.json"/>
                        <include name="ext-*/*.xml"/>
                        <include name="ext-*/*.properties"/>
                        <include name="ext-*/.sencha/**"/>
                        <include name="ext-*/build/**"/>
                        <include name="ext-*/cmd/**"/>
                        <include name="ext-*/packages/**"/>
                        <include name="ext-*/src/**"/>
                        <include name="ext-*/examples/ux/**"/>
                        <include name="ext-*/overrides/**"/>
                      </patternset>
                    </unzip>

                    <exec executable="sencha" dir="${project.build.directory}">
                      <arg value="-sdk"/>
                      <arg file="${project.build.directory}/ext"/>
                      <arg line="generate app baseapp"/>
                      <arg file="${project.build.directory}/baseapp"/>
                    </exec>

                    <delete>
                      <fileset dir="${project.build.directory}/baseapp">
                        <include name="app/**"/>
                      </fileset>
                    </delete>

                    <copy todir="${project.build.directory}/baseapp" overwrite="true" filtering="true">
                      <fileset dir="${project.basedir}/src/main/baseapp">
                        <include name="**"/>
                      </fileset>
                      <filterset>
                        <filter token="project.build.directory" value="${project.build.directory}"/>
                      </filterset>
                    </copy>

                    <exec executable="sencha" dir="${project.build.directory}/baseapp">
                      <arg line="app build testing"/>
                    </exec>

                    <!--<exec executable="sencha" dir="${project.build.directory}/baseapp">-->
                      <!--<arg line="app build production"/>-->
                    <!--</exec>-->

                    <delete dir="${project.basedir}/src/main/resources/static/rapture"/>
                    <mkdir dir="${project.basedir}/src/main/resources/static/rapture"/>

                    <!--<copy file="${project.build.directory}/ext/build/ext-all-debug.js"-->
                          <!--tofile="${project.basedir}/src/main/resources/static/rapture/baseapp-debug.js"/>-->

                    <copy todir="${project.basedir}/src/main/resources/static/rapture">
                      <fileset dir="${project.build.directory}/testing/baseapp">
                        <!--<include name="app.json"/>-->
                        <include name="baseapp-*.js"/>
                        <include name="resources/*.css"/>
                      </fileset>
                    </copy>

                    <!--<copy file="${project.build.directory}/ext/build/ext-all.js"-->
                          <!--tofile="${project.basedir}/src/main/resources/static/rapture/baseapp-prod.js"/>-->

                    <!--<copy todir="${project.basedir}/src/main/resources/static/rapture">-->
                      <!--<fileset dir="${project.build.directory}/production/baseapp">-->
                        <!--<include name="*.js"/>-->
                        <!--<include name="resources/*.css"/>-->
                        <!--<include name="resources/images/**"/>-->
                      <!--</fileset>-->
                    <!--</copy>-->
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--<plugin>-->
            <!--<groupId>org.codehaus.gmaven</groupId>-->
            <!--<artifactId>gmaven-plugin</artifactId>-->
            <!--<executions>-->
              <!--<execution>-->
                <!--<phase>generate-resources</phase>-->
                <!--<goals>-->
                  <!--<goal>execute</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                  <!--<classpathIncludes>none</classpathIncludes>-->
                  <!--<source>file:${project.basedir}/src/main/script/regenerate.groovy</source>-->
                <!--</configuration>-->
              <!--</execution>-->
            <!--</executions>-->
          <!--</plugin>-->
        </plugins>
      </build>
    </profile>

    <!--<profile>-->
      <!--<id>regenerate</id>-->
      <!--<build>-->
        <!--<plugins>-->
          <!--<plugin>-->
            <!--<groupId>org.codehaus.gmaven</groupId>-->
            <!--<artifactId>gmaven-plugin</artifactId>-->
            <!--<executions>-->
              <!--<execution>-->
                <!--<phase>generate-resources</phase>-->
                <!--<goals>-->
                  <!--<goal>execute</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                  <!--<classpathIncludes>none</classpathIncludes>-->
                  <!--<source>file:${project.basedir}/src/main/script/regenerate.groovy</source>-->
                <!--</configuration>-->
              <!--</execution>-->
            <!--</executions>-->
          <!--</plugin>-->
        <!--</plugins>-->
      <!--</build>-->
    <!--</profile>-->

    <!--<profile>-->
      <!--<id>watch</id>-->
      <!--<build>-->
        <!--<plugins>-->
          <!--<plugin>-->
            <!--<groupId>org.codehaus.gmaven</groupId>-->
            <!--<artifactId>gmaven-plugin</artifactId>-->
            <!--<executions>-->
              <!--<execution>-->
                <!--<phase>generate-resources</phase>-->
                <!--<goals>-->
                  <!--<goal>execute</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                  <!--<classpathIncludes>none</classpathIncludes>-->
                  <!--<source>file:${project.basedir}/src/main/script/watch.groovy</source>-->
                <!--</configuration>-->
              <!--</execution>-->
            <!--</executions>-->
          <!--</plugin>-->
        <!--</plugins>-->
      <!--</build>-->
    <!--</profile>-->
  </profiles>

</project>
